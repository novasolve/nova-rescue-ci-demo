============================= test session starts ==============================
platform linux -- Python 3.12.11, pytest-8.4.1, pluggy-1.6.0 -- /opt/hostedtoolcache/Python/3.12.11/x64/bin/python
cachedir: .pytest_cache
metadata: {'Python': '3.12.11', 'Platform': 'Linux-6.11.0-1018-azure-x86_64-with-glibc2.39', 'Packages': {'pytest': '8.4.1', 'pluggy': '1.6.0'}, 'Plugins': {'json-report': '1.5.0', 'metadata': '3.1.1'}, 'CI': 'true', 'JAVA_HOME': '/usr/lib/jvm/temurin-17-jdk-amd64'}
rootdir: /home/runner/work/nova-rescue-ci-demo/nova-rescue-ci-demo
plugins: json-report-1.5.0, metadata-3.1.1
collecting ... collected 13 items

tests/test_calculator.py::TestCalculator::test_addition PASSED           [  7%]
tests/test_calculator.py::TestCalculator::test_subtraction FAILED        [ 15%]
tests/test_calculator.py::TestCalculator::test_multiplication FAILED     [ 23%]
tests/test_calculator.py::TestCalculator::test_division FAILED           [ 30%]
tests/test_calculator.py::TestCalculator::test_division_by_zero PASSED   [ 38%]
tests/test_calculator.py::TestCalculator::test_power FAILED              [ 46%]
tests/test_calculator.py::TestCalculator::test_square_root FAILED        [ 53%]
tests/test_calculator.py::TestCalculator::test_square_root_negative PASSED [ 61%]
tests/test_calculator.py::TestCalculator::test_percentage FAILED         [ 69%]
tests/test_calculator.py::TestCalculator::test_average FAILED            [ 76%]
tests/test_calculator.py::TestEdgeCases::test_large_numbers FAILED       [ 84%]
tests/test_calculator.py::TestEdgeCases::test_precision PASSED           [ 92%]
tests/test_calculator.py::TestEdgeCases::test_negative_scenarios FAILED  [100%]

=================================== FAILURES ===================================
_______________________ TestCalculator.test_subtraction ________________________
tests/test_calculator.py:33: in test_subtraction
    assert calc.subtract(5, 3) == 2
E   assert 8 == 2
E    +  where 8 = subtract(5, 3)
E    +    where subtract = <calculator.Calculator object at 0x7fac003beea0>.subtract
______________________ TestCalculator.test_multiplication ______________________
tests/test_calculator.py:40: in test_multiplication
    assert calc.multiply(3, 4) == 12
E   assert 7 == 12
E    +  where 7 = multiply(3, 4)
E    +    where multiply = <calculator.Calculator object at 0x7fac00375340>.multiply
_________________________ TestCalculator.test_division _________________________
tests/test_calculator.py:47: in test_division
    assert calc.divide(10, 2) == 5
E   assert 12 == 5
E    +  where 12 = divide(10, 2)
E    +    where divide = <calculator.Calculator object at 0x7fac00376b70>.divide
__________________________ TestCalculator.test_power ___________________________
tests/test_calculator.py:59: in test_power
    assert calc.power(2, 3) == 8
E   assert 6 == 8
E    +  where 6 = power(2, 3)
E    +    where power = <calculator.Calculator object at 0x7fac00374710>.power
_______________________ TestCalculator.test_square_root ________________________
tests/test_calculator.py:66: in test_square_root
    assert calc.square_root(9) == 3
E   assert 9 == 3
E    +  where 9 = square_root(9)
E    +    where square_root = <calculator.Calculator object at 0x7fac00375dc0>.square_root
________________________ TestCalculator.test_percentage ________________________
tests/test_calculator.py:78: in test_percentage
    assert calc.percentage(100, 25) == 25
E   assert 25000 == 25
E    +  where 25000 = percentage(100, 25)
E    +    where percentage = <calculator.Calculator object at 0x7fac00375070>.percentage
_________________________ TestCalculator.test_average __________________________
tests/test_calculator.py:85: in test_average
    assert calc.average([1, 2, 3, 4, 5]) == 3
E   assert 15 == 3
E    +  where 15 = average([1, 2, 3, 4, 5])
E    +    where average = <calculator.Calculator object at 0x7fac003b20f0>.average
_______________________ TestEdgeCases.test_large_numbers _______________________
tests/test_calculator.py:102: in test_large_numbers
    assert calc.multiply(large, 0) == 0
E   assert 10000000000.0 == 0
E    +  where 10000000000.0 = multiply(10000000000.0, 0)
E    +    where multiply = <calculator.Calculator object at 0x7fac0038b650>.multiply
____________________ TestEdgeCases.test_negative_scenarios _____________________
tests/test_calculator.py:111: in test_negative_scenarios
    assert calc.multiply(-1, -1) == 1
E   assert -2 == 1
E    +  where -2 = multiply(-1, -1)
E    +    where multiply = <calculator.Calculator object at 0x7fac0038b080>.multiply
=========================== short test summary info ============================
FAILED tests/test_calculator.py::TestCalculator::test_subtraction - assert 8 == 2
 +  where 8 = subtract(5, 3)
 +    where subtract = <calculator.Calculator object at 0x7fac003beea0>.subtract
FAILED tests/test_calculator.py::TestCalculator::test_multiplication - assert 7 == 12
 +  where 7 = multiply(3, 4)
 +    where multiply = <calculator.Calculator object at 0x7fac00375340>.multiply
FAILED tests/test_calculator.py::TestCalculator::test_division - assert 12 == 5
 +  where 12 = divide(10, 2)
 +    where divide = <calculator.Calculator object at 0x7fac00376b70>.divide
FAILED tests/test_calculator.py::TestCalculator::test_power - assert 6 == 8
 +  where 6 = power(2, 3)
 +    where power = <calculator.Calculator object at 0x7fac00374710>.power
FAILED tests/test_calculator.py::TestCalculator::test_square_root - assert 9 == 3
 +  where 9 = square_root(9)
 +    where square_root = <calculator.Calculator object at 0x7fac00375dc0>.square_root
FAILED tests/test_calculator.py::TestCalculator::test_percentage - assert 25000 == 25
 +  where 25000 = percentage(100, 25)
 +    where percentage = <calculator.Calculator object at 0x7fac00375070>.percentage
FAILED tests/test_calculator.py::TestCalculator::test_average - assert 15 == 3
 +  where 15 = average([1, 2, 3, 4, 5])
 +    where average = <calculator.Calculator object at 0x7fac003b20f0>.average
FAILED tests/test_calculator.py::TestEdgeCases::test_large_numbers - assert 10000000000.0 == 0
 +  where 10000000000.0 = multiply(10000000000.0, 0)
 +    where multiply = <calculator.Calculator object at 0x7fac0038b650>.multiply
FAILED tests/test_calculator.py::TestEdgeCases::test_negative_scenarios - assert -2 == 1
 +  where -2 = multiply(-1, -1)
 +    where multiply = <calculator.Calculator object at 0x7fac0038b080>.multiply
========================= 9 failed, 4 passed in 0.08s ==========================
